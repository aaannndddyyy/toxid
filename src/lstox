#!/bin/bash

FORMAT='user'
PEERNAME=

function show_help {
    echo ''
    echo 'lstox -f [user/dht/bootstrapd/toxic] -p [peer name]'
    echo ''
    exit 0
}

while [[ $# > 1 ]]
do
key="$1"

case $key in
    -h|--help)
    show_help
    ;;
    -p|--peer)
    shift
    PEERNAME="$1"
    ;;
    -f|--format)
    shift
    FORMAT="$1"
    ;;
    *)
    # unknown option
    ;;
esac
shift
done

if [ ! -d /etc/avahi ]; then
    echo 'Avahi is not installed'
    exit 0
fi

TEMPFILE=/tmp/toxavahi.txt
if [[ $FORMAT == 'user' ]]; then
    avahi-browse -atrl | grep " Tox User\|hostname =\|address =\|port =\|txt =" > $TEMPFILE
else
    avahi-browse -atr | grep " Tox Bootstrap\|hostname =\|address =\|port =\|txt =" > $TEMPFILE
fi
if [ ! -f $TEMPFILE ]; then
    exit 1
fi

state=0
address=""
port=0
peer=""
while IFS='' read -r line || [[ -n "$line" ]]; do
    if [ ${state} -eq "4" ]; then
        if [[ $line == *"txt ="* ]]; then
            id=$(echo $line | awk -F '"' '{print $2}')
            if [ ! $PEERNAME ]; then
                if [[ $FORMAT == 'DHTnodes' || $FORMAT == 'dht' ]]; then
                    echo "$address $port $id"
                else
                    if [[ $FORMAT == 'tox-bootstrapd' || $FORMAT == 'bootstrapd' ]]; then
                        echo "{ // $peer"
                        echo "  address = \"$address\""
                        echo "  port = $port"
                        echo "  public_key = \"$id\""
                        echo '},'
                    else
                        if [[ $FORMAT == 'toxic' ]]; then
                            echo "/connect $peer $port $id"
                        else
                            echo "$peer $id"
                        fi
                    fi
                fi
            else
                if [[ $peer == ${PEERNAME} ]]; then
                    echo "$id"
                fi
            fi
            state=0
        fi
    fi
    if [ ${state} -eq "3" ]; then
        if [[ $line == *"port ="* ]]; then
            port=$(echo $line | awk -F '[' '{print $2}' | awk -F ']' '{print $1}')
            state=4
        fi
    fi
    if [ ${state} -eq "2" ]; then
        if [[ $line == *"address ="* ]]; then
            address=$(echo $line | awk -F '[' '{print $2}' | awk -F ']' '{print $1}')
            state=3
        fi
    fi
    if [ ${state} -eq "1" ]; then
        if [[ $line == *"hostname ="* ]]; then
            peer=$(echo $line | awk -F '[' '{print $2}' | awk -F ']' '{print $1}')
            state=2
        fi
    fi
    if [[ $line == *" Tox "* && $line == *"= "* ]]; then
        state=1
    fi
done < "$TEMPFILE"

rm -f $TEMPFILE

exit 0
